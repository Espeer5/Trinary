"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const assign = require("lodash/assign");
const capitalize = require("lodash/capitalize");
const clone = require("lodash/clone");
const cloneDeep = require("lodash/cloneDeep");
const cloneDeepWith = require("lodash/cloneDeepWith");
const compact = require("lodash/compact");
const defer = require("lodash/defer");
const delay = require("lodash/delay");
const each = require("lodash/each");
const every = require("lodash/every");
const extend = require("lodash/extend");
const filter = require("lodash/filter");
const find = require("lodash/find");
const findLast = require("lodash/findLast");
const get = require("lodash/get");
const groupBy = require("lodash/groupBy");
const includes = require("lodash/includes");
const invoke = require("lodash/invoke");
const isArguments = require("lodash/isArguments");
const isArray = require("lodash/isArray");
const isBoolean = require("lodash/isBoolean");
const isEmpty = require("lodash/isEmpty");
const isEqual = require("lodash/isEqual");
const isEqualWith = require("lodash/isEqualWith");
const isFunction = require("lodash/isFunction");
const isNumber = require("lodash/isNumber");
const isObject = require("lodash/isObject");
const isObjectLike = require("lodash/isObjectLike");
const isRegExp = require("lodash/isRegExp");
const isString = require("lodash/isString");
const keys = require("lodash/keys");
const last = require("lodash/last");
const map = require("lodash/map");
const reduce = require("lodash/reduce");
const reject = require("lodash/reject");
const some = require("lodash/some");
const tap = require("lodash/tap");
const toArray = require("lodash/toArray");
const transform = require("lodash/transform");
exports.default = {
    assign,
    capitalize,
    clone,
    cloneDeep,
    cloneDeepWith,
    compact,
    defer,
    delay,
    each,
    every,
    extend,
    filter,
    find,
    findLast,
    get,
    groupBy,
    includes,
    invoke,
    isArguments,
    isArray,
    isBoolean,
    isEmpty,
    isEqual,
    isEqualWith,
    isFunction,
    isNumber,
    isObject,
    isObjectLike,
    isRegExp,
    isString,
    keys,
    last,
    map,
    reduce,
    reject,
    some,
    tap,
    toArray,
    transform
};
